// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	parking "github.com/adityatresnobudi/parking-system/parking"
	mock "github.com/stretchr/testify/mock"
)

// LotSelector is an autogenerated mock type for the LotSelector type
type LotSelector struct {
	mock.Mock
}

// SelectLot provides a mock function with given fields: lots
func (_m *LotSelector) SelectLot(lots []*parking.Lot) *parking.Lot {
	ret := _m.Called(lots)

	var r0 *parking.Lot
	if rf, ok := ret.Get(0).(func([]*parking.Lot) *parking.Lot); ok {
		r0 = rf(lots)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*parking.Lot)
		}
	}

	return r0
}

type mockConstructorTestingTNewLotSelector interface {
	mock.TestingT
	Cleanup(func())
}

// NewLotSelector creates a new instance of LotSelector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLotSelector(t mockConstructorTestingTNewLotSelector) *LotSelector {
	mock := &LotSelector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
